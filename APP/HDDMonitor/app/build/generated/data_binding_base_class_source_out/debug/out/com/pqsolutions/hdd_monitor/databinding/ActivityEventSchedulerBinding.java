// Generated by data binding compiler. Do not edit!
package com.pqsolutions.hdd_monitor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.pqsolutions.hdd_monitor.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityEventSchedulerBinding extends ViewDataBinding {
  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final Button buttonScheduleEvent;

  @NonNull
  public final EditText editTextEventDate;

  @NonNull
  public final EditText editTextEventName;

  @NonNull
  public final EditText editTextEventTime;

  @NonNull
  public final TextView schedulerTitle;

  protected ActivityEventSchedulerBinding(Object _bindingComponent, View _root,
      int _localFieldCount, BottomNavigationView bottomNavigation, Button buttonScheduleEvent,
      EditText editTextEventDate, EditText editTextEventName, EditText editTextEventTime,
      TextView schedulerTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bottomNavigation = bottomNavigation;
    this.buttonScheduleEvent = buttonScheduleEvent;
    this.editTextEventDate = editTextEventDate;
    this.editTextEventName = editTextEventName;
    this.editTextEventTime = editTextEventTime;
    this.schedulerTitle = schedulerTitle;
  }

  @NonNull
  public static ActivityEventSchedulerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_event_scheduler, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityEventSchedulerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityEventSchedulerBinding>inflateInternal(inflater, R.layout.activity_event_scheduler, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityEventSchedulerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_event_scheduler, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityEventSchedulerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityEventSchedulerBinding>inflateInternal(inflater, R.layout.activity_event_scheduler, null, false, component);
  }

  public static ActivityEventSchedulerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityEventSchedulerBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityEventSchedulerBinding)bind(component, view, R.layout.activity_event_scheduler);
  }
}
